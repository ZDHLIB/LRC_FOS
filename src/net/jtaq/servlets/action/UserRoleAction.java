/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.jtaq.servlets.action;

import java.util.Collection;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.jtaq.managers.RightsAdmin;
import net.jtaq.managers.UserAdmin;
import net.jtaq.servlets.form.UserRoleForm;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

/** 
 * MyEclipse Struts
 * Creation date: 06-08-2007
 * 
 * XDoclet definition:
 * @struts.action path="/userRole" name="userRoleForm" input="/form/userRole.jsp" scope="request" validate="true"
 */
public class UserRoleAction extends DispatchAction {
  
	
	public 	ActionForward  add(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
	
	{
		UserAdmin ra=new UserAdmin(); 
		UserRoleForm urf=(UserRoleForm)form;
		
		int   Role_ID=Integer.parseInt((String)urf.getRoleID());
		 
		int  UserID=Integer.parseInt((String)urf.getUserID());
		
		int OperatorID =Integer.parseInt((String)urf.getOperatorID());
		
		boolean isAdd=ra.addRoleOfUser(UserID, Role_ID, OperatorID);
		
		if(isAdd){
			//return mapping.findForward("add_success");
			urf.setIsAdd(true);
			return userRolelist(mapping,form,request,response);
		}
		 
		return  mapping.findForward("add_error");
	}
	
	public 	ActionForward  remove(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
	{
		
		UserAdmin ua=new UserAdmin(); 
		UserRoleForm urf=(UserRoleForm)form;
		
		int   Role_ID=Integer.parseInt((String)urf.getRoleID());
		 
		int  UserID=Integer.parseInt((String)urf.getUserID());
		
		boolean isdel=ua.deleteUserRole(UserID, Role_ID);
		
		if(isdel){
			urf.setIsRemove(true); 
			//return mapping.findForward("remove_success");
		    return userRolelist(mapping,form,request,response);
		}
		 
		return  mapping.findForward("remove_error");
		
	}

	public 	ActionForward  userRolelist(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
	{
		   Collection roles;
		   Collection rolesOfUser;
		   UserAdmin ua=new UserAdmin(); 	     	
		   RightsAdmin ra=new RightsAdmin(); 
		   UserRoleForm urf=(UserRoleForm)form;
		  int UserID=Integer.parseInt((String)urf.getUserID());
		 //  int UserID=Integer.parseInt((String)request.getParameter("userID"));
			try{	
				 roles=ra.getAllRoles();
				 urf.setRoles(roles);
				 rolesOfUser=ua.getRolesOfUser(UserID);
				 request.setAttribute("rolesOfUser", rolesOfUser);
			}catch(Exception e){
			return  mapping.findForward("list_error");
			}
			return  mapping.findForward("list_success");
		
	}
	
	public 	ActionForward  updatenum(ActionMapping mapping,ActionForm form, 
			HttpServletRequest request,HttpServletResponse response)throws Exception
	
	{
		UserAdmin ra = new UserAdmin(); 
		UserRoleForm urf = (UserRoleForm)form;
		
		//int   Role_ID=Integer.parseInt((String)urf.getRoleID());
		 
		int  UserID = Integer.parseInt((String)urf.getUserID());
		
		int view = urf.getUserview();
		
		int down = urf.getUserdown();
		
		//int OperatorID =Integer.parseInt((String)urf.getOperatorID());
		
		boolean isupdate = ra.updatenum(UserID, view, down);
		
		if( isupdate ){
			//return mapping.findForward("add_success");
			urf.setIsupdate(true);
			return userRolelist(mapping,form,request,response);
		}
		 
		return  mapping.findForward("update_error");
	}
}