/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.jtaq.servlets.action;

import java.util.Collection;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.jtaq.managers.RightsAdmin;
import net.jtaq.servlets.form.FunctionOperationForm;
import net.jtaq.utils.AdminDetails;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

/** 
 * MyEclipse Struts
 * Creation date: 06-07-2007
 * 
 * XDoclet definition:
 * @struts.action path="/functionOperation" name="functionOperationForm" input="/form/functionOperation.jsp" scope="request" validate="true"
 */
public class FunctionOperationAction extends DispatchAction {
	
	public 	ActionForward  add(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
	
	{
		RightsAdmin ra=new RightsAdmin(); 
		FunctionOperationForm fof=(FunctionOperationForm)form;
		int   FunctionID=Integer.parseInt((String)fof.getFunctionID());
		AdminDetails admin=(AdminDetails)request.getSession().getAttribute("admin");
		int  OperationID=admin.getAdminID();
		
		int OperatorID =0;
		String operationidStr=(String)fof.getOperationID();
		boolean isAdd=false;
		if(null!=operationidStr&&!"".equalsIgnoreCase(operationidStr)){
			String [] operationidArray=operationidStr.split(",");
			for(int i =0;i<operationidArray.length;i++){
				String OperationIDString=operationidArray[i];
				OperationID=Integer.parseInt(OperationIDString);
				ra.deleteOperationOfFunction(FunctionID,OperationID);
				 isAdd=ra.addOperationOfFunction(FunctionID,OperationID, OperatorID);
				 if(!isAdd) break;
			}
			
		}else{
			isAdd=ra.deleteAllOperationOfFunction(FunctionID);
		}
		 
		
	
		
		if(isAdd){
			//return mapping.findForward("add_success");
			// fof.setIsAdd(true);
			  String CONTENT_TYPE = "text/html; charset=utf-8";
			  response.setContentType(CONTENT_TYPE);
			  response.getWriter().write("<script>alert('操作成功！');</script>");
			//return null;
			return list(mapping,form,request,response);
			//return null;
		}
		 
		return  mapping.findForward("add_error");
	}
	
	 
 
	
	 
 

public 	ActionForward  remove(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
{
	
		RightsAdmin ra=new RightsAdmin(); 
		FunctionOperationForm fof=(FunctionOperationForm)form;
		
		int   funtionID=Integer.parseInt((String)fof.getFunctionID());
		 
		int  OperationID=Integer.parseInt((String)fof.getOperationID());
		
		 
		
		boolean isdel=ra.deleteOperationOfFunction(funtionID,OperationID);
		
		if(isdel){
//			fof.setIsRemove(true); 
//			//return mapping.findForward("remove_success");
//		    return list(mapping,form,request,response);
			 String CONTENT_TYPE = "text/html; charset=utf-8";
			  response.setContentType(CONTENT_TYPE);
			 response.getWriter().write("<script>alert('删除成功！');history.go(-1);</script>");
			return null;//list(mapping,form,request,response);
		}
		 
		return  mapping.findForward("remove_error");
	
}

public 	ActionForward  list(ActionMapping mapping,ActionForm form ,HttpServletRequest request,HttpServletResponse response)throws Exception
{
	   Collection operations;
	   Collection operationsOfFunction;
	    RightsAdmin ra=new RightsAdmin(); 	     	
	  
	     FunctionOperationForm fof=(FunctionOperationForm)form;
		 int  functionID=Integer.parseInt((String)fof.getFunctionID());
	  try{	
		  operations=ra.getAllOperations();  
		  fof.setOperations(operations);
		 operationsOfFunction=ra.getOperationsOfFunction(functionID);
		  //fof.setOperationsOfFunction(operationsOfFunction);
		 request.removeAttribute("operationsOfFunction");
		 request.setAttribute("operationsOfFunction", operationsOfFunction);
		}catch(Exception e){
		return new ActionForward("list_error");
		}
		return  mapping.findForward("list_success");
	
}

}